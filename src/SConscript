import os
import sys
import glob

env = Environment(ENV=os.environ)
env.Append(CPPFLAGS =  ['-Ofast', '-std=c++11', '-Wall', '-Wextra', '-pedantic'])  # '-pg', '-g', 
env.Append(LINKFLAGS = ['-Ofast', '-std=c++11'])                                   # '-pg', '-g', 
env.Append(CPPPATH = ['../include'])
env.Append(CPPDEFINES={'STATE_MAX':'500', 'SIZE_MAX':'\(\(size_t\)-1\)', 'PI':'3.1415926535897932', 'EPS':'1e-6'})  # maybe reduce the state max to something reasonable?

binary_names = ['bcrham', 'hample']

sources = []
for fname in glob.glob(os.getenv('PWD') + '/src/*.cc'):
    is_binary = False
    for bname in binary_names:
        if bname in fname:
            is_binary = True
            break
    if not is_binary:
        sources.append(fname.replace('src/', '_build/'))

env.Library(target='ham', source=sources)

for bname in binary_names:
    env.Program(target='../' + bname, source=bname + '.cc', LIBS=['ham', 'yaml-cpp', 'gsl', 'gslcblas'], LIBPATH=['.', 'yaml-cpp'])
    # env.Program(target='../' + bname, source=bname + '.cc', LIBS=['ham', 'yaml-cpp'], LIBPATH=['.', 'yaml-cpp'])
